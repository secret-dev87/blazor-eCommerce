@page "/products/{id:int}"
@inject IProductService ProductService

@if(product == null)
{
	<span>@message</span>
}
else
{
	<div class="media">
		<div class="media-img-wrapper mr-2">
			<img class="media-img" src="@product.ImageUrl" alt="@product.Title">
		</div>
		<div class="media-body">
			<h2 cclass="mb-0">@product.Title</h2>
			<p>@product.Description</p>
			<h4 class="price">
				@*$@product.Price*@
			</h4>
		</div>
	</div>
}


@code {
	private Product? product = null;
	private string message = string.Empty;

	//Because this code block is not a real class
	//I must add a key word to specify the field as a Parameter
	[Parameter]
	public int Id { get; set; }

	protected override async Task OnParametersSetAsync()
	{
		message = "Loading Product...";

		var result = await ProductService.GetProduct(Id);
		if(!result.Success)
		{
			message = result.Message;
		}
		else
		{
			product = result.Data;
		}
	}
}
